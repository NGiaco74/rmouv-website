#!/bin/bash

echo "üöÄ Installation de R'MouV Backend"
echo "=================================="

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n'est pas install√©. Veuillez installer Node.js (version 16 ou plus r√©cente)"
    echo "   T√©l√©chargez depuis: https://nodejs.org/"
    exit 1
fi

# Check Node.js version
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 16 ]; then
    echo "‚ùå Node.js version 16 ou plus r√©cente requis. Version actuelle: $(node -v)"
    exit 1
fi

echo "‚úÖ Node.js $(node -v) d√©tect√©"

# Navigate to backend directory
cd backend

# Install dependencies
echo "üì¶ Installation des d√©pendances..."
npm install

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de l'installation des d√©pendances"
    exit 1
fi

echo "‚úÖ D√©pendances install√©es avec succ√®s"

# Create database directory
mkdir -p ../database

# Initialize database
echo "üóÑÔ∏è  Initialisation de la base de donn√©es..."
node -e "
const sqlite3 = require('sqlite3').verbose();
const bcrypt = require('bcryptjs');

const db = new sqlite3.Database('../database.sqlite');

db.serialize(() => {
    // Users table
    db.run(\`CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        email TEXT UNIQUE NOT NULL,
        password TEXT NOT NULL,
        prenom TEXT NOT NULL,
        nom TEXT NOT NULL,
        telephone TEXT,
        objectif TEXT,
        role TEXT DEFAULT 'user',
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )\`);

    // Courses table
    db.run(\`CREATE TABLE IF NOT EXISTS courses (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        description TEXT,
        capacity INTEGER NOT NULL,
        duration INTEGER DEFAULT 60,
        price DECIMAL(10,2) DEFAULT 0,
        active BOOLEAN DEFAULT 1,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )\`);

    // Time slots table
    db.run(\`CREATE TABLE IF NOT EXISTS time_slots (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        course_id INTEGER NOT NULL,
        day_of_week INTEGER NOT NULL,
        start_time TEXT NOT NULL,
        end_time TEXT NOT NULL,
        max_capacity INTEGER NOT NULL,
        active BOOLEAN DEFAULT 1,
        FOREIGN KEY (course_id) REFERENCES courses (id)
    )\`);

    // Bookings table
    db.run(\`CREATE TABLE IF NOT EXISTS bookings (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        time_slot_id INTEGER NOT NULL,
        booking_date DATE NOT NULL,
        status TEXT DEFAULT 'confirmed',
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users (id),
        FOREIGN KEY (time_slot_id) REFERENCES time_slots (id)
    )\`);

    // Waitlist table
    db.run(\`CREATE TABLE IF NOT EXISTS waitlist (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user_id INTEGER NOT NULL,
        time_slot_id INTEGER NOT NULL,
        booking_date DATE NOT NULL,
        position INTEGER NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users (id),
        FOREIGN KEY (time_slot_id) REFERENCES time_slots (id)
    )\`);

    // Insert default admin user
    const adminPassword = bcrypt.hashSync('admin123', 10);
    db.run(\`INSERT OR IGNORE INTO users (email, password, prenom, nom, role) 
            VALUES ('admin@rmouv.fr', ?, 'Admin', 'R\\'MouV', 'admin')\`, [adminPassword]);

    // Insert default courses
    db.run(\`INSERT OR IGNORE INTO courses (name, description, capacity, price) VALUES 
            ('Cours Mobilit√©', 'Am√©lioration de la mobilit√© et flexibilit√©', 10, 25.00),
            ('Renforcement', 'Renforcement musculaire adapt√©', 12, 30.00),
            ('Cardio doux', 'Cardio adapt√© pour tous niveaux', 12, 25.00)\`);

    // Insert default time slots
    db.run(\`INSERT OR IGNORE INTO time_slots (course_id, day_of_week, start_time, end_time, max_capacity) VALUES 
            (1, 1, '10:00', '11:00', 10),
            (2, 3, '18:00', '19:00', 12),
            (3, 5, '09:00', '10:00', 12)\`);

    console.log('‚úÖ Base de donn√©es initialis√©e');
});

db.close();
"

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de l'initialisation de la base de donn√©es"
    exit 1
fi

echo ""
echo "üéâ Installation termin√©e avec succ√®s !"
echo ""
echo "üìã Informations importantes:"
echo "   ‚Ä¢ Serveur: http://localhost:3000"
echo "   ‚Ä¢ Admin: http://localhost:3000/admin-login.html"
echo "   ‚Ä¢ Identifiants admin: admin@rmouv.fr / admin123"
echo ""
echo "üöÄ Pour d√©marrer le serveur:"
echo "   cd backend && npm start"
echo ""
echo "üîß Pour le d√©veloppement:"
echo "   cd backend && npm run dev"
echo ""
echo "üìä Base de donn√©es: database.sqlite"
echo ""
